{"ast":null,"code":"import React,{useState}from'react';import'./ChatUI.css';import axios from'axios';//import {Configuration, OpenAIApi} from 'https://cdn.skypack.dev/openai';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ChatUI=()=>{const[inputValue,setInputValue]=useState('');// input 창에 입력된 내용  \nconst templateFront=\"<div class=\\\"line\\\"><span class=\\\"chat-box mine\\\">\";// 추가되는 채팅의 html 형식 고정 앞부분\nconst templateBack='</span></div>';// 추가되는 채팅의 html 형식 고정 뒷부분\nconst addChat=async()=>{let template=templateFront+inputValue+templateBack;let chatContent=document.querySelector('.chat-content');chatContent.insertAdjacentHTML('beforeend',template);setInputValue('');const response=await axios.get('http://localhost:5000/chat',{params:{prompt:inputValue}});console.log(\"답변 :\"+response.data);let front=\"<div class=\\\"line\\\"><span class=\\\"chat-box\\\">\";let back='</span></div>';template=front+response.data+back;chatContent.insertAdjacentHTML('beforeend',template);// const configuration=new Configuration({\n//   apiKey: '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',\n// });\n// const openai=new OpenAIApi(configuration);\n// openai.createCompletion({\n//   model:\"text-davinci-002\",\n//   prompt:inputValue,\n//   temperature:0.9,\n//   max_tokens:256,\n//   top_p:1,\n//   frequency_penalty:0,\n//   presense_penalty:0,\n// }).then((result)=>{\n//   console.log(result.data.choices[0].text);\n//   let front=`<div class=\"line\"><span class=\"chat-box\"></span>`;\n//   let back='</span></div>';\n//   template=front+result.data.choices[0].text+back;\n//   chatContent.insertAdjacentHTML('beforeend', template);\n// });\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{class:\"chat-content\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"line\",children:/*#__PURE__*/_jsx(\"span\",{class:\"chat-box\",children:\"\\uC548\\uB155?\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"line\",children:/*#__PURE__*/_jsx(\"span\",{class:\"chat-box mine\",children:\"\\uC548\\uB155!\"})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",class:\"chat-box\",value:inputValue,onChange:e=>setInputValue(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:addChat,children:\"\\uC804\\uC1A1\"})]});};export default ChatUI;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","ChatUI","inputValue","setInputValue","templateFront","templateBack","addChat","template","chatContent","document","querySelector","insertAdjacentHTML","response","get","params","prompt","console","log","data","front","back","children","class","type","value","onChange","e","target","onClick"],"sources":["D:/VsCodeDevelopment/ExpressMyChatBot/my_chat_bot/src/Chat/ChatUI.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatUI.css';\r\nimport axios from 'axios';\r\n//import {Configuration, OpenAIApi} from 'https://cdn.skypack.dev/openai';\r\n\r\nconst ChatUI= ()=> {\r\n  const [inputValue, setInputValue] = useState(''); // input 창에 입력된 내용  \r\n\r\n  const templateFront=`<div class=\"line\"><span class=\"chat-box mine\">`; // 추가되는 채팅의 html 형식 고정 앞부분\r\n  const templateBack='</span></div>'; // 추가되는 채팅의 html 형식 고정 뒷부분\r\n\r\n  const addChat = async() => {\r\n    let template=templateFront+inputValue+templateBack;\r\n    let chatContent = document.querySelector('.chat-content');\r\n    chatContent.insertAdjacentHTML('beforeend', template);\r\n    setInputValue(''); \r\n    \r\n    const response = await axios.get('http://localhost:5000/chat', {\r\n      params: { prompt: inputValue },\r\n    });\r\n\r\n    console.log(\"답변 :\"+response.data);\r\n\r\n    let front=`<div class=\"line\"><span class=\"chat-box\">`;\r\n    let back='</span></div>';\r\n    template=front+response.data+back;\r\n    chatContent.insertAdjacentHTML('beforeend', template);\r\n\r\n\r\n\r\n    // const configuration=new Configuration({\r\n    //   apiKey: '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',\r\n    // });\r\n\r\n    // const openai=new OpenAIApi(configuration);\r\n\r\n    // openai.createCompletion({\r\n    //   model:\"text-davinci-002\",\r\n    //   prompt:inputValue,\r\n    //   temperature:0.9,\r\n    //   max_tokens:256,\r\n    //   top_p:1,\r\n    //   frequency_penalty:0,\r\n    //   presense_penalty:0,\r\n    // }).then((result)=>{\r\n    //   console.log(result.data.choices[0].text);\r\n    //   let front=`<div class=\"line\"><span class=\"chat-box\"></span>`;\r\n    //   let back='</span></div>';\r\n    //   template=front+result.data.choices[0].text+back;\r\n    //   chatContent.insertAdjacentHTML('beforeend', template);\r\n    // });\r\n  \r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"chat-content\">\r\n        <div class=\"line\">\r\n            <span class=\"chat-box\">안녕?</span>\r\n        </div>\r\n        <div class=\"line\">\r\n            <span class=\"chat-box mine\">안녕!</span>\r\n        </div>\r\n      </div>\r\n      <input type=\"text\" class=\"chat-box\" value={inputValue} onChange={(e)=>setInputValue(e.target.value)} />\r\n      <button onClick={addChat}>전송</button>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ChatUI;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,cAAc,CACrB,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,KAAM,CAAAC,MAAM,CAAEA,CAAA,GAAK,CACjB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAAE;AAElD,KAAM,CAAAS,aAAa,qDAAiD,CAAE;AACtE,KAAM,CAAAC,YAAY,CAAC,eAAe,CAAE;AAEpC,KAAM,CAAAC,OAAO,CAAG,KAAAA,CAAA,GAAW,CACzB,GAAI,CAAAC,QAAQ,CAACH,aAAa,CAACF,UAAU,CAACG,YAAY,CAClD,GAAI,CAAAG,WAAW,CAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC,CACzDF,WAAW,CAACG,kBAAkB,CAAC,WAAW,CAAEJ,QAAQ,CAAC,CACrDJ,aAAa,CAAC,EAAE,CAAC,CAEjB,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACiB,GAAG,CAAC,4BAA4B,CAAE,CAC7DC,MAAM,CAAE,CAAEC,MAAM,CAAEb,UAAW,CAC/B,CAAC,CAAC,CAEFc,OAAO,CAACC,GAAG,CAAC,MAAM,CAACL,QAAQ,CAACM,IAAI,CAAC,CAEjC,GAAI,CAAAC,KAAK,gDAA4C,CACrD,GAAI,CAAAC,IAAI,CAAC,eAAe,CACxBb,QAAQ,CAACY,KAAK,CAACP,QAAQ,CAACM,IAAI,CAACE,IAAI,CACjCZ,WAAW,CAACG,kBAAkB,CAAC,WAAW,CAAEJ,QAAQ,CAAC,CAIrD;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGF,CAAC,CAED,mBACEP,KAAA,QAAAqB,QAAA,eACErB,KAAA,QAAKsB,KAAK,CAAC,cAAc,CAAAD,QAAA,eACvBvB,IAAA,QAAKwB,KAAK,CAAC,MAAM,CAAAD,QAAA,cACbvB,IAAA,SAAMwB,KAAK,CAAC,UAAU,CAAAD,QAAA,CAAC,eAAG,CAAM,CAAC,CAChC,CAAC,cACNvB,IAAA,QAAKwB,KAAK,CAAC,MAAM,CAAAD,QAAA,cACbvB,IAAA,SAAMwB,KAAK,CAAC,eAAe,CAAAD,QAAA,CAAC,eAAG,CAAM,CAAC,CACrC,CAAC,EACH,CAAC,cACNvB,IAAA,UAAOyB,IAAI,CAAC,MAAM,CAACD,KAAK,CAAC,UAAU,CAACE,KAAK,CAAEtB,UAAW,CAACuB,QAAQ,CAAGC,CAAC,EAAGvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,cACvG1B,IAAA,WAAQ8B,OAAO,CAAEtB,OAAQ,CAAAe,QAAA,CAAC,cAAE,CAAQ,CAAC,EAClC,CAAC,CAGV,CAAC,CAED,cAAe,CAAApB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}