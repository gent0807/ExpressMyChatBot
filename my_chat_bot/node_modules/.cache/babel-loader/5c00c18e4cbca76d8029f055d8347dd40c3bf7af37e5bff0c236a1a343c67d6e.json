{"ast":null,"code":"import React,{useRef,useState}from'react';import'./ChatUI.css';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ChatUI=()=>{const[inputValue,setInputValue]=useState('');// input 창에 입력된 내용  \nconst templateFront=\"<div class=\\\"line\\\"><span class=\\\"chat-box mine\\\">\";// 추가되는 채팅의 html 형식 고정 앞부분\nconst templateBack='</span></div>';// 추가되는 채팅의 html 형식 고정 뒷부분\n//전의 대화 누적\nlet storedInputValue=useRef(inputValue);// input 창에 입력된 내용을 저장하는 변수\nconst addChat=async()=>{//이전에 입력한 내용을 합친 내용을 저장\nstoredInputValue.current=storedInputValue.current+\" \"+inputValue;// input 창에 입력된 내용을 저장\n//입력창에 입력된 내용을 채팅창에 추가\nlet template=templateFront+inputValue+templateBack;let chatContent=document.querySelector('.chat-content');chatContent.insertAdjacentHTML('beforeend',template);setInputValue('');//파파고 api를 이용해 영어로 번역된 값 받아오기\n// const english= await axios.get('https://localhost:5000/transleateToEnglish', {\n//   params: { prompt: storedInputValue.current },\n// });\n// axios를 이용해 서버에 get 요청을 보내고, 응답을 받아온다.\nconst response=await axios.get('http://localhost:5000/chat',{params:{prompt:inputValue}});//파파고 api를 이용해 영어 답변을 한국어로 번역해 받아오기\n// const finalResponse= await axios.get('https://localhost:5000/transleateToKorean', {\n//   params: { prompt: response.data },\n// })\nlet front=\"<div class=\\\"line\\\"><span class=\\\"chat-box\\\">\";let back='</span></div>';template=front+response.data+back;chatContent.insertAdjacentHTML('beforeend',template);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{class:\"chat-content\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"line\",children:/*#__PURE__*/_jsx(\"span\",{class:\"chat-box\",children:\"\\uC548\\uB155?\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"line\",children:/*#__PURE__*/_jsx(\"span\",{class:\"chat-box mine\",children:\"\\uC548\\uB155!\"})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",class:\"chat-box\",value:inputValue,onChange:e=>setInputValue(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:addChat,children:\"\\uC804\\uC1A1\"})]});};export default ChatUI;","map":{"version":3,"names":["React","useRef","useState","axios","jsx","_jsx","jsxs","_jsxs","ChatUI","inputValue","setInputValue","templateFront","templateBack","storedInputValue","addChat","current","template","chatContent","document","querySelector","insertAdjacentHTML","response","get","params","prompt","front","back","data","children","class","type","value","onChange","e","target","onClick"],"sources":["D:/VsCodeDevelopment/ExpressMyChatBot/my_chat_bot/src/Chat/ChatUI.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './ChatUI.css';\r\nimport axios from 'axios';\r\n\r\nconst ChatUI= ()=> {\r\n  const [inputValue, setInputValue] = useState(''); // input 창에 입력된 내용  \r\n\r\n  const templateFront=`<div class=\"line\"><span class=\"chat-box mine\">`; // 추가되는 채팅의 html 형식 고정 앞부분\r\n  const templateBack='</span></div>'; // 추가되는 채팅의 html 형식 고정 뒷부분\r\n\r\n  //전의 대화 누적\r\n  let storedInputValue=useRef(inputValue); // input 창에 입력된 내용을 저장하는 변수\r\n\r\n  const addChat = async() => {\r\n\r\n    //이전에 입력한 내용을 합친 내용을 저장\r\n    storedInputValue.current=storedInputValue.current+\" \"+inputValue; // input 창에 입력된 내용을 저장\r\n\r\n    //입력창에 입력된 내용을 채팅창에 추가\r\n    let template=templateFront+inputValue+templateBack;\r\n    let chatContent = document.querySelector('.chat-content');\r\n    chatContent.insertAdjacentHTML('beforeend', template);\r\n    setInputValue(''); \r\n\r\n    //파파고 api를 이용해 영어로 번역된 값 받아오기\r\n    // const english= await axios.get('https://localhost:5000/transleateToEnglish', {\r\n    //   params: { prompt: storedInputValue.current },\r\n    // });\r\n    \r\n    // axios를 이용해 서버에 get 요청을 보내고, 응답을 받아온다.\r\n    const response = await axios.get('http://localhost:5000/chat', {\r\n      params: { prompt: inputValue },\r\n    });\r\n\r\n    //파파고 api를 이용해 영어 답변을 한국어로 번역해 받아오기\r\n    // const finalResponse= await axios.get('https://localhost:5000/transleateToKorean', {\r\n    //   params: { prompt: response.data },\r\n    // })\r\n\r\n    let front=`<div class=\"line\"><span class=\"chat-box\">`;\r\n    let back='</span></div>';\r\n    template=front+response.data+back;\r\n    chatContent.insertAdjacentHTML('beforeend', template);\r\n\r\n  \r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"chat-content\">\r\n        <div class=\"line\">\r\n            <span class=\"chat-box\">안녕?</span>\r\n        </div>\r\n        <div class=\"line\">\r\n            <span class=\"chat-box mine\">안녕!</span>\r\n        </div>\r\n      </div>\r\n      <input type=\"text\" class=\"chat-box\" value={inputValue} onChange={(e)=>setInputValue(e.target.value)} />\r\n      <button onClick={addChat}>전송</button>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ChatUI;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC/C,MAAO,cAAc,CACrB,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,MAAM,CAAEA,CAAA,GAAK,CACjB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAAE;AAElD,KAAM,CAAAS,aAAa,qDAAiD,CAAE;AACtE,KAAM,CAAAC,YAAY,CAAC,eAAe,CAAE;AAEpC;AACA,GAAI,CAAAC,gBAAgB,CAACZ,MAAM,CAACQ,UAAU,CAAC,CAAE;AAEzC,KAAM,CAAAK,OAAO,CAAG,KAAAA,CAAA,GAAW,CAEzB;AACAD,gBAAgB,CAACE,OAAO,CAACF,gBAAgB,CAACE,OAAO,CAAC,GAAG,CAACN,UAAU,CAAE;AAElE;AACA,GAAI,CAAAO,QAAQ,CAACL,aAAa,CAACF,UAAU,CAACG,YAAY,CAClD,GAAI,CAAAK,WAAW,CAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC,CACzDF,WAAW,CAACG,kBAAkB,CAAC,WAAW,CAAEJ,QAAQ,CAAC,CACrDN,aAAa,CAAC,EAAE,CAAC,CAEjB;AACA;AACA;AACA;AAEA;AACA,KAAM,CAAAW,QAAQ,CAAG,KAAM,CAAAlB,KAAK,CAACmB,GAAG,CAAC,4BAA4B,CAAE,CAC7DC,MAAM,CAAE,CAAEC,MAAM,CAAEf,UAAW,CAC/B,CAAC,CAAC,CAEF;AACA;AACA;AACA;AAEA,GAAI,CAAAgB,KAAK,gDAA4C,CACrD,GAAI,CAAAC,IAAI,CAAC,eAAe,CACxBV,QAAQ,CAACS,KAAK,CAACJ,QAAQ,CAACM,IAAI,CAACD,IAAI,CACjCT,WAAW,CAACG,kBAAkB,CAAC,WAAW,CAAEJ,QAAQ,CAAC,CAIvD,CAAC,CAED,mBACET,KAAA,QAAAqB,QAAA,eACErB,KAAA,QAAKsB,KAAK,CAAC,cAAc,CAAAD,QAAA,eACvBvB,IAAA,QAAKwB,KAAK,CAAC,MAAM,CAAAD,QAAA,cACbvB,IAAA,SAAMwB,KAAK,CAAC,UAAU,CAAAD,QAAA,CAAC,eAAG,CAAM,CAAC,CAChC,CAAC,cACNvB,IAAA,QAAKwB,KAAK,CAAC,MAAM,CAAAD,QAAA,cACbvB,IAAA,SAAMwB,KAAK,CAAC,eAAe,CAAAD,QAAA,CAAC,eAAG,CAAM,CAAC,CACrC,CAAC,EACH,CAAC,cACNvB,IAAA,UAAOyB,IAAI,CAAC,MAAM,CAACD,KAAK,CAAC,UAAU,CAACE,KAAK,CAAEtB,UAAW,CAACuB,QAAQ,CAAGC,CAAC,EAAGvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,cACvG1B,IAAA,WAAQ8B,OAAO,CAAErB,OAAQ,CAAAc,QAAA,CAAC,cAAE,CAAQ,CAAC,EAClC,CAAC,CAGV,CAAC,CAED,cAAe,CAAApB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}